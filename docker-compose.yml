version: "3"
services:

  builder:
    build:
      context: ./seekare_frontend
      dockerfile: Dockerfile.build
    environment:
      - REACT_APP_BLOCKY=${REACT_APP_BLOCKY}
    volumes:
      - web-root:/var/www/html/build
      
  api:
    image: registry.digitalocean.com/sk-reg/api:latest
    hostname: "api"
    build:
      context: ./seekare_backend
      dockerfile: Dockerfile
    restart: always
    command: "node ./src/app.js"
    environment:
      - NODE_ENV=${NODE_ENV}
      - MongoDB=${MongoDB}
      - EMAIL_SENDER=${EMAIL_SENDER}
      - EMAIL_PASS=${EMAIL_PASS}
      - DOMAIN_URL_PROD=${DOMAIN_URL_PROD}
    ports:
      - ${EXT_PORT}:5000
    # expose:
    #   - 5001
    volumes:
      # - ./src:/usr/app/src
      - ${LOG_DIR}:/usr/logs
    # depends_on:
    # - db
    networks:
      - front
      - back

  proxy:
    restart: always
    hostname: proxy
    build:
      context: ./seekare_frontend
    volumes:
      - web-root:/var/www/html
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - ~/dhparam:/etc/ssl/certs
    ports:
      - ${INGRESS_PORT}:80
      - 443:443
    depends_on:
      - api
      - builder
    networks:
      - front

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - web-root:/var/www/html
    depends_on:
      - proxy
    command: certonly --webroot --webroot-path=/var/www/html --email taylor@seekare.org --agree-tos --no-eff-email --force-renewal -d seekare.org -d www.seekare.org

  admin:
    hostname: admin
    build:
      context: ./seekare_admin
    depends_on:
      - api
    ports:
      - 65432:80
    networks:
      - front

volumes:
  certbot-etc:
  certbot-var:
  web-root:

networks:
  # The presence of these objects is sufficient to define them
  front: {}
  back: {}

  # db:
  #   hostname: "db"
  #   image: mongo
  #   restart: always
  #   volumes:
  #     - ${DATA_DB}:/data/db
  #   expose:
  #     - 27017
  #   ports:
  #     - 27017:27017
  #   networks:
  #     - back
  # environment:
  #   MONGO_INITDB_ROOT_USERNAME: ${MONGO_ADMIN_USER}
  #   MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ADMIN_PASSWORD}

  # mongo-express:
  #   image: mongo-express
  #   restart: always
  #   ports:
  #     - 8081:8081
  #   networks:
  #     - default
  #   environment:
  #     ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_ADMIN_USER}
  #     ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_ADMIN_PASSWORD}
  #     ME_CONFIG_MONGODB_SERVER: db

  # redis:
  #   image: redis
  #   ports:
  #     - 6379:6379
  #   networks:
  #     - default
