version: '3'
services:
  api:
    image: registry.digitalocean.com/sk-reg/api:latest
    hostname: 'api'
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    command: 'nodemon ./src/app.js'
    environment:
      - NODE_ENV=${NODE_ENV}
    ports:
      - ${EXT_PORT}:5000
    # expose:
    #   - 5001
    volumes:
      - ./src:/usr/app/src
      - ${LOG_DIR}:/usr/logs
    depends_on:
      - db
    networks:
      - front
      - back

  # proxy:
  #   restart: always
  #   image: nginx
  #   volumes:
  #     - ./nginx/nginx.conf:/etc/nginx/nginx.conf
  #   ports:
  #     - ${PORT}:80
  #   depends_on:
  #     - api

  db:
    hostname: 'db'
    image: mongo
    restart: always
    volumes:
      - ${DATA_DB}:/data/db
    expose:
      - 27017
    ports:
      - 27017:27017
    networks:
      - back
    # environment:
    #   MONGO_INITDB_ROOT_USERNAME: ${MONGO_ADMIN_USER}
    #   MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ADMIN_PASSWORD}

  # mongo-express:
  #   image: mongo-express
  #   restart: always
  #   ports:
  #     - 8081:8081
  #   networks:
  #     - default
  #   environment:
  #     ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_ADMIN_USER}
  #     ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_ADMIN_PASSWORD}
  #     ME_CONFIG_MONGODB_SERVER: db

  # redis:
  #   image: redis
  #   ports:
  #     - 6379:6379
  #   networks:
  #     - default

networks:
  # The presence of these objects is sufficient to define them
  front: {}
  back: {}
